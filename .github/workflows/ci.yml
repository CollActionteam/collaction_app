# ==================================================
# This is the main worflow for testing and building
# the app.
#   The following is not yet implemented:
#    - Builds for different environments (test/prod)
#    - Building an iOS app
#    - Building a release version on master
#    - Distributing apps to testers
#      (Firebase app distribution or TestFlight)
#    - Building a release version on master
#    - Signing and Deployment to the stores
# ==================================================

name: CI

on:
  push:
    branches: [development]
  pull_request:
    types: [opened, synchronize]
    
env:
  flutter_version: '2.5.x'
  flutter_channel: 'stable'
  java_version: '12.x'

jobs:
  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Fetch code from repository
      uses: actions/checkout@v2
    - name: Cache Flutter install
      uses: actions/cache@v2
      with:
        path: /opt/hostedtoolcache/flutter
        key: cache-flutter-${{ env.flutter_channel }}-${{ env.flutter_version }}-${{ runner.os }}
    - name: Setup the Flutter environment
      uses: subosito/flutter-action@v1
      with:
        channel: ${{ env.flutter_channel }}
        flutter-version: ${{ env.flutter_version }}
    - name: Get Flutter dependencies
      run: flutter pub get .
    - name: Build generated code
      run: flutter pub run build_runner build --delete-conflicting-outputs
    - name: Check for any formatting issues
      run: flutter format --dry-run --set-exit-if-changed .
    - name: Statically analyze the Dart code
      run:  |
        echo ${{ secrets.ENV }} | base64 -d > .env
        flutter analyze .

  test:
    needs: [analyze]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Fetch code from repository
      uses: actions/checkout@v2
    - name: Cache Flutter install
      uses: actions/cache@v2
      with:
        path: /opt/hostedtoolcache/flutter
        key: cache-flutter-${{ env.flutter_channel }}-${{ env.flutter_version }}-${{ runner.os }}
    - name: Setup the Flutter environment
      uses: subosito/flutter-action@v1
      with:
        channel: ${{ env.flutter_channel }}
        flutter-version: ${{ env.flutter_version }}
    - name: Get Flutter dependencies
      run: flutter pub get .
    - name: Build generated code
      run: flutter pub run build_runner build --delete-conflicting-outputs
    - name: Run unit and widget tests.
      run:  |
        echo ${{ secrets.ENV }} | base64 -d > .env
        flutter test -r expanded .

  build:
    #TODO test only if: ${{ github.ref == 'refs/heads/development' }}
    needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Fetch code from repository
      uses: actions/checkout@v2
    - name: Setup Java for Android
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.java_version }}
    - name: Cache Flutter install
      uses: actions/cache@v2
      with:
        path: /opt/hostedtoolcache/flutter
        key: cache-flutter-${{ env.flutter_channel }}-${{ env.flutter_version }}-${{ runner.os }}
    - name: Setup the Flutter environment
      uses: subosito/flutter-action@v1
      with:
        channel: ${{ env.flutter_channel }}
        flutter-version: ${{ env.flutter_version }}
    - name: Get Flutter dependencies
      run: flutter pub get .
    - name: Build generated code
      run: flutter pub run build_runner build --delete-conflicting-outputs
    - name: Generate app icons
      run: flutter pub run flutter_launcher_icons:main
    - name: Build appbundle
      run: |
        echo ${{ secrets.ENV }} | base64 -d > .env
        echo ${{ secrets.ANDROID_GOOGLE_SERVICES_JSON }} | base64 -d > android/app/google-services.json
        flutter build appbundle --release --build-number $GITHUB_RUN_NUMBER 
    - name: Build apk (deprecate)
        flutter build apk --release --build-number $GITHUB_RUN_NUMBER 
    - name: Sign appbundle
      uses: r0adkll/sign-android-release@v1
      id: sign_appbundle
      with:
        releaseDirectory: build/app/outputs/bundle/release
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }} 
    - name: Sign apk (deprecate)
      uses: r0adkll/sign-android-release@v1
      id: sign_apk
      with:
        releaseDirectory: build/app/outputs/flutter-apk
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
    - name: Upload build files to the artifacts
      uses: actions/upload-artifact@v2
      with:
        name: android-release
        path: 
         - ${{steps.sign_apk.outputs.signedReleaseFile}}
         - ${{steps.sign_appbundle.outputs.signedReleaseFile}}
         - build/app/outputs/logs

  # TODO Update to distribute appbundle once released
  distribute:
    if: ${{ github.ref == 'refs/heads/development' }} #TODO test only
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download generated apk from the artifacts
        uses: actions/download-artifact@v2
        with:
          name: android-release
      - name: Upload generated apk to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: internal
          file: app-signed.apk
